{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\react-app\\\\src\\\\components\\\\WeatherAPI.js\";\nimport React from \"react\";\nimport weerIMG from \"../img/weer.png\";\n\nclass WeatherAPI extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getWeather = async city => {\n      // api call: api.openweathermap.org/data/2.5/weather?q=City&appid=API_Key\n      const API_Key = \"e23a1892a1d9e6b0d6127c8c55d05352\";\n      const url = `http://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_Key}`; // eslint-disable-next-line\n\n      const response = await fetch(url).then(response => response.json()).then(data => {\n        this.setState({\n          city: data.name,\n          country: data.sys.country,\n          temp: this.celsius(data.main.temp),\n          temp_max: this.celsius(data.main.temp_max),\n          temp_min: this.celsius(data.main.temp_min),\n          weather: data.weather.description,\n          icon: data.weather.icon\n        });\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n\n    this.state = {\n      city: undefined,\n      country: undefined\n    };\n    this.updateInput = this.updateInput.bind(this);\n  }\n\n  updateInput(event) {\n    this.getWeather(event.target.value);\n  }\n\n  celsius(temp) {\n    let celsius = Math.floor(temp - 273.15);\n    return celsius;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onChange: this.updateInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }, \" \", this.state.city, \" - \", this.state.country, \" \"), /*#__PURE__*/React.createElement(\"img\", {\n      className: \"weer\",\n      src: weerIMG,\n      alt: \"weer logo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"temp\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }, \"Gemidelde: \", this.state.temp, \"\\u2103\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"temp\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }, this.state.weather), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"min-max\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }, \" Min: \", this.state.temp_min, \"\\u2103\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 66\n      }\n    }), \" Max: \", this.state.temp_max, \"\\u2103 \"));\n  }\n\n}\n\nexport default WeatherAPI;","map":{"version":3,"sources":["C:/xampp/htdocs/react-app/src/components/WeatherAPI.js"],"names":["React","weerIMG","WeatherAPI","Component","constructor","props","getWeather","city","API_Key","url","response","fetch","then","json","data","setState","name","country","sys","temp","celsius","main","temp_max","temp_min","weather","description","icon","catch","error","console","log","state","undefined","updateInput","bind","event","target","value","Math","floor","render"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport weerIMG from \"../img/weer.png\";\r\n\r\nclass WeatherAPI extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      city: undefined,\r\n      country: undefined,\r\n    };\r\n    this.updateInput = this.updateInput.bind(this);\r\n  }\r\n\r\n  updateInput(event){\r\n    this.getWeather(event.target.value);\r\n  }\r\n\r\n  celsius(temp) {\r\n    let celsius = Math.floor(temp - 273.15);\r\n    return celsius;\r\n  }\r\n\r\n  getWeather = async (city) => {\r\n    // api call: api.openweathermap.org/data/2.5/weather?q=City&appid=API_Key\r\n    const API_Key = \"e23a1892a1d9e6b0d6127c8c55d05352\";\r\n    const url = `http://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_Key}`;\r\n    // eslint-disable-next-line\r\n    const response = await fetch(url).then(response => response.json()).then(data => {\r\n      this.setState({\r\n        city: data.name,\r\n        country: data.sys.country,\r\n        temp: this.celsius(data.main.temp),\r\n        temp_max: this.celsius(data.main.temp_max),\r\n        temp_min: this.celsius(data.main.temp_min),\r\n        weather: data.weather.description,\r\n        icon: data.weather.icon\r\n      });\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n    })\r\n  };\r\n  \r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <form>\r\n          <input type=\"text\" onChange={this.updateInput}></input>\r\n        </form>\r\n        <h2> {this.state.city} - {this.state.country} </h2>\r\n        <img className=\"weer\" src={weerIMG} alt=\"weer logo\" />\r\n        <p className=\"temp\">Gemidelde: {this.state.temp}&#8451;</p>\r\n        <p className=\"temp\">{this.state.weather}</p>\r\n        <p className=\"min-max\"> Min: {this.state.temp_min}&#8451;<br/> Max: {this.state.temp_max}&#8451; </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default WeatherAPI;"]},"metadata":{},"sourceType":"module"}