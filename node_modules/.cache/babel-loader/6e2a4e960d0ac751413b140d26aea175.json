{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\react-app\\\\src\\\\components\\\\WeatherAPI.js\";\nimport React from \"react\";\nimport weerIMG from \"../img/weer.png\";\n\nclass WeatherAPI extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      city: undefined,\n      country: undefined,\n      newCity: ''\n    };\n    this.getWeather();\n    this.updateInput = this.updateInput.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this); // const [query, setQuery] = useState('');\n    // const [weather, setWeather] = useState({});\n  }\n\n  celsius(temp) {\n    let celsius = Math.floor(temp - 273.15);\n    return celsius;\n  }\n\n  updateInput(event) {\n    this.setState({\n      newCity: event.target.value\n    });\n  }\n\n  handleSubmit() {\n    // api call: api.openweathermap.org/data/2.5/weather?q=City&appid=API_Key\n    const API_Key = \"e23a1892a1d9e6b0d6127c8c55d05352\";\n    const City = \"Congo\";\n    const url = `http://api.openweathermap.org/data/2.5/weather?q=${City}&appid=${API_Key}`;\n    const response = fetch(url);\n    const data = response.json();\n    console.log(data);\n    this.setState({\n      city: data.name,\n      country: data.sys.country,\n      temp: this.celsius(data.main.temp),\n      temp_max: this.celsius(data.main.temp_max),\n      temp_min: this.celsius(data.main.temp_min),\n      icon: data.weather.icon\n    });\n  } // getWeather = async () => {\n  //   // api call: api.openweathermap.org/data/2.5/weather?q=City&appid=API_Key\n  //   const API_Key = \"e23a1892a1d9e6b0d6127c8c55d05352\";\n  //   const City = \"Congo\";\n  //   const url = `http://api.openweathermap.org/data/2.5/weather?q=${City}&appid=${API_Key}`;\n  //   const response = await fetch(url);\n  //   const data = await response.json();\n  //   console.log(data);\n  //   this.setState({\n  //     city: data.name,\n  //     country: data.sys.country,\n  //     temp: this.celsius(data.main.temp),\n  //     temp_max: this.celsius(data.main.temp_max),\n  //     temp_min: this.celsius(data.main.temp_min),\n  //     icon: data.weather.icon\n  //   });\n  // };\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: typeof weather.main != \"undefined\" ? weather.main.temp > 16 ? 'app warm' : 'app' : 'app',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"main\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"search-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"search-bar\",\n      placeholder: \"Search...\",\n      onChange: e => setQuery(e.target.value),\n      value: query,\n      onKeyPress: search,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }\n    })), typeof weather.main != \"undefined\" ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"location-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"location\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 15\n      }\n    }, weather.name, \", \", weather.sys.country), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"date\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 15\n      }\n    }, dateBuilder(new Date()))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"weather-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"temp\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 15\n      }\n    }, Math.round(weather.main.temp), \"\\xB0c\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"weather\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 15\n      }\n    }, weather.weather[0].main))) : ''));\n  }\n\n}\n\nexport default WeatherAPI;","map":{"version":3,"sources":["C:/xampp/htdocs/react-app/src/components/WeatherAPI.js"],"names":["React","weerIMG","WeatherAPI","Component","constructor","state","city","undefined","country","newCity","getWeather","updateInput","bind","handleSubmit","celsius","temp","Math","floor","event","setState","target","value","API_Key","City","url","response","fetch","data","json","console","log","name","sys","main","temp_max","temp_min","icon","weather","render","e","setQuery","query","search","dateBuilder","Date","round"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,iBAApB;;AAEA,MAAMC,UAAN,SAAyBF,KAAK,CAACG,SAA/B,CAAyC;AACvCC,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAEC,SADK;AAEXC,MAAAA,OAAO,EAAED,SAFE;AAGXE,MAAAA,OAAO,EAAG;AAHC,KAAb;AAKA,SAAKC,UAAL;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB,CATY,CAUZ;AACA;AACD;;AAEDE,EAAAA,OAAO,CAACC,IAAD,EAAO;AACZ,QAAID,OAAO,GAAGE,IAAI,CAACC,KAAL,CAAWF,IAAI,GAAG,MAAlB,CAAd;AACA,WAAOD,OAAP;AACD;;AAEDH,EAAAA,WAAW,CAACO,KAAD,EAAO;AAChB,SAAKC,QAAL,CAAc;AAACV,MAAAA,OAAO,EAAGS,KAAK,CAACE,MAAN,CAAaC;AAAxB,KAAd;AACD;;AAEDR,EAAAA,YAAY,GAAE;AACZ;AACA,UAAMS,OAAO,GAAG,kCAAhB;AACA,UAAMC,IAAI,GAAG,OAAb;AACA,UAAMC,GAAG,GAAI,oDAAmDD,IAAK,UAASD,OAAQ,EAAtF;AACA,UAAMG,QAAQ,GAAGC,KAAK,CAACF,GAAD,CAAtB;AACA,UAAMG,IAAI,GAAGF,QAAQ,CAACG,IAAT,EAAb;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AAEA,SAAKR,QAAL,CAAc;AACZb,MAAAA,IAAI,EAAEqB,IAAI,CAACI,IADC;AAEZvB,MAAAA,OAAO,EAAEmB,IAAI,CAACK,GAAL,CAASxB,OAFN;AAGZO,MAAAA,IAAI,EAAE,KAAKD,OAAL,CAAaa,IAAI,CAACM,IAAL,CAAUlB,IAAvB,CAHM;AAIZmB,MAAAA,QAAQ,EAAE,KAAKpB,OAAL,CAAaa,IAAI,CAACM,IAAL,CAAUC,QAAvB,CAJE;AAKZC,MAAAA,QAAQ,EAAE,KAAKrB,OAAL,CAAaa,IAAI,CAACM,IAAL,CAAUE,QAAvB,CALE;AAMZC,MAAAA,IAAI,EAAET,IAAI,CAACU,OAAL,CAAaD;AANP,KAAd;AAQD,GAzCsC,CA2CvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGAE,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAG,OAAOD,OAAO,CAACJ,IAAf,IAAuB,WAAxB,GAAyCI,OAAO,CAACJ,IAAR,CAAalB,IAAb,GAAoB,EAArB,GAA2B,UAA3B,GAAwC,KAAhF,GAAyF,KAAzG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,SAAS,EAAC,YAFZ;AAGE,MAAA,WAAW,EAAC,WAHd;AAIE,MAAA,QAAQ,EAAEwB,CAAC,IAAIC,QAAQ,CAACD,CAAC,CAACnB,MAAF,CAASC,KAAV,CAJzB;AAKE,MAAA,KAAK,EAAEoB,KALT;AAME,MAAA,UAAU,EAAEC,MANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,EAWI,OAAOL,OAAO,CAACJ,IAAf,IAAuB,WAAxB,gBACD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2BI,OAAO,CAACN,IAAnC,QAA2CM,OAAO,CAACL,GAAR,CAAYxB,OAAvD,CADF,eAEE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAuBmC,WAAW,CAAC,IAAIC,IAAJ,EAAD,CAAlC,CAFF,CADF,eAKE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG5B,IAAI,CAAC6B,KAAL,CAAWR,OAAO,CAACJ,IAAR,CAAalB,IAAxB,CADH,UADF,eAIE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0BsB,OAAO,CAACA,OAAR,CAAgB,CAAhB,EAAmBJ,IAA7C,CAJF,CALF,CADC,GAaI,EAxBP,CADF,CADF;AA8BD;;AA9FsC;;AAiGzC,eAAe/B,UAAf","sourcesContent":["import React from \"react\";\r\nimport weerIMG from \"../img/weer.png\";\r\n\r\nclass WeatherAPI extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      city: undefined,\r\n      country: undefined,\r\n      newCity : '',\r\n    };\r\n    this.getWeather();\r\n    this.updateInput = this.updateInput.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    // const [query, setQuery] = useState('');\r\n    // const [weather, setWeather] = useState({});\r\n  }\r\n\r\n  celsius(temp) {\r\n    let celsius = Math.floor(temp - 273.15);\r\n    return celsius;\r\n  }\r\n\r\n  updateInput(event){\r\n    this.setState({newCity : event.target.value})\r\n  }\r\n\r\n  handleSubmit(){\r\n    // api call: api.openweathermap.org/data/2.5/weather?q=City&appid=API_Key\r\n    const API_Key = \"e23a1892a1d9e6b0d6127c8c55d05352\";\r\n    const City = \"Congo\";\r\n    const url = `http://api.openweathermap.org/data/2.5/weather?q=${City}&appid=${API_Key}`;\r\n    const response = fetch(url);\r\n    const data = response.json();\r\n    console.log(data);\r\n\r\n    this.setState({\r\n      city: data.name,\r\n      country: data.sys.country,\r\n      temp: this.celsius(data.main.temp),\r\n      temp_max: this.celsius(data.main.temp_max),\r\n      temp_min: this.celsius(data.main.temp_min),\r\n      icon: data.weather.icon\r\n    });\r\n  }\r\n\r\n  // getWeather = async () => {\r\n  //   // api call: api.openweathermap.org/data/2.5/weather?q=City&appid=API_Key\r\n  //   const API_Key = \"e23a1892a1d9e6b0d6127c8c55d05352\";\r\n  //   const City = \"Congo\";\r\n  //   const url = `http://api.openweathermap.org/data/2.5/weather?q=${City}&appid=${API_Key}`;\r\n  //   const response = await fetch(url);\r\n  //   const data = await response.json();\r\n  //   console.log(data);\r\n\r\n  //   this.setState({\r\n  //     city: data.name,\r\n  //     country: data.sys.country,\r\n  //     temp: this.celsius(data.main.temp),\r\n  //     temp_max: this.celsius(data.main.temp_max),\r\n  //     temp_min: this.celsius(data.main.temp_min),\r\n  //     icon: data.weather.icon\r\n  //   });\r\n  // };\r\n  \r\n\r\n  render() {\r\n    return (\r\n      <div className={(typeof weather.main != \"undefined\") ? ((weather.main.temp > 16) ? 'app warm' : 'app') : 'app'}>\r\n        <main>\r\n          <div className=\"search-box\">\r\n            <input \r\n              type=\"text\"\r\n              className=\"search-bar\"\r\n              placeholder=\"Search...\"\r\n              onChange={e => setQuery(e.target.value)}\r\n              value={query}\r\n              onKeyPress={search}\r\n            />\r\n          </div>\r\n          {(typeof weather.main != \"undefined\") ? (\r\n          <div>\r\n            <div className=\"location-box\">\r\n              <div className=\"location\">{weather.name}, {weather.sys.country}</div>\r\n              <div className=\"date\">{dateBuilder(new Date())}</div>\r\n            </div>\r\n            <div className=\"weather-box\">\r\n              <div className=\"temp\">\r\n                {Math.round(weather.main.temp)}°c\r\n              </div>\r\n              <div className=\"weather\">{weather.weather[0].main}</div>\r\n            </div>\r\n          </div>\r\n          ) : ('')}\r\n        </main>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default WeatherAPI;"]},"metadata":{},"sourceType":"module"}