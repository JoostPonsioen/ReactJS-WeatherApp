{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\react-app\\\\src\\\\components\\\\WeatherAPI.js\";\nimport React from \"react\";\nimport weerIMG from \"../img/weer.jpg\";\n\nclass WeatherAPI extends React.Component {\n  constructor() {\n    super();\n\n    this.getWeather = async () => {\n      // api call: api.openweathermap.org/data/2.5/weather?q=City&appid=API_Key\n      const API_Key = \"e23a1892a1d9e6b0d6127c8c55d05352\";\n      const City = \"Nijmegen\";\n      const url = `http://api.openweathermap.org/data/2.5/weather?q=${City}&appid=${API_Key}`;\n      const response = await fetch(url);\n      const data = await response.json();\n      console.log(data);\n      this.setState({\n        city: data.name,\n        country: data.sys.country,\n        temp: this.celsius(data.main.temp),\n        temp_max: this.celsius(data.main.temp_max),\n        temp_min: this.celsius(data.main.temp_min)\n      });\n    };\n\n    this.state = {\n      city: undefined,\n      country: undefined,\n      username: ''\n    };\n    this.getWeather();\n    this.updateInput = this.updateInput.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  updateInput(event) {\n    this.setState({\n      username: event.target.value\n    });\n  }\n\n  handleSubmit() {\n    console.log('Your input value is: ' + this.state.username); //Send state to the server code\n  }\n\n  celsius(temp) {\n    let celsius = Math.floor(temp - 273.15);\n    return celsius;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      class: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onChange: this.updateInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      onClick: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }\n    }, \" \", this.state.city, \" - \", this.state.country, \" \"), /*#__PURE__*/React.createElement(\"img\", {\n      src: weerIMG,\n      alt: \"weer logo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      class: \"temp\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }, \"Gemidelde: \", this.state.temp, \"\\u2103\"), /*#__PURE__*/React.createElement(\"p\", {\n      class: \"min-max\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }\n    }, \" Min: \", this.state.temp_min, \"\\u2103\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 62\n      }\n    }), \" Max: \", this.state.temp_max, \"\\u2103 \"));\n  }\n\n}\n\nexport default WeatherAPI;","map":{"version":3,"sources":["C:/xampp/htdocs/react-app/src/components/WeatherAPI.js"],"names":["React","weerIMG","WeatherAPI","Component","constructor","getWeather","API_Key","City","url","response","fetch","data","json","console","log","setState","city","name","country","sys","temp","celsius","main","temp_max","temp_min","state","undefined","username","updateInput","bind","handleSubmit","event","target","value","Math","floor","render"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport weerIMG from \"../img/weer.jpg\";\r\n\r\nclass WeatherAPI extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      city: undefined,\r\n      country: undefined,\r\n      username : '',\r\n    };\r\n    this.getWeather();\r\n    this.updateInput = this.updateInput.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  updateInput(event){\r\n    this.setState({username : event.target.value})\r\n  }\r\n  handleSubmit(){\r\n    console.log('Your input value is: ' + this.state.username)\r\n    //Send state to the server code\r\n  }\r\n\r\n  celsius(temp) {\r\n    let celsius = Math.floor(temp - 273.15);\r\n    return celsius;\r\n  }\r\n\r\n  getWeather = async () => {\r\n    // api call: api.openweathermap.org/data/2.5/weather?q=City&appid=API_Key\r\n    const API_Key = \"e23a1892a1d9e6b0d6127c8c55d05352\";\r\n    const City = \"Nijmegen\";\r\n    const url = `http://api.openweathermap.org/data/2.5/weather?q=${City}&appid=${API_Key}`;\r\n    const response = await fetch(url);\r\n    const data = await response.json();\r\n    console.log(data);\r\n\r\n    this.setState({\r\n      city: data.name,\r\n      country: data.sys.country,\r\n      temp: this.celsius(data.main.temp),\r\n      temp_max: this.celsius(data.main.temp_max),\r\n      temp_min: this.celsius(data.main.temp_min),\r\n    });\r\n  };\r\n  \r\n\r\n  render() {\r\n    return (\r\n      <div class=\"container\">\r\n        <form>\r\n          <input type=\"text\" onChange={this.updateInput}></input>\r\n          <input type=\"submit\" onClick={this.handleSubmit} ></input>\r\n        </form>\r\n        <h2> {this.state.city} - {this.state.country} </h2>\r\n        <img src={weerIMG} alt=\"weer logo\" />\r\n        <p class=\"temp\">Gemidelde: {this.state.temp}&#8451;</p>\r\n        <p class=\"min-max\"> Min: {this.state.temp_min}&#8451;<br/> Max: {this.state.temp_max}&#8451; </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default WeatherAPI;"]},"metadata":{},"sourceType":"module"}